<document xmlns="http://cnx.rice.edu/cnxml"> 
<title>Jb0240r Review</title>
<metadata xmlns:md="http://cnx.rice.edu/mdml">
  <md:content-id>m45208</md:content-id>
  <md:title>Jb0240r Review</md:title>
  <md:abstract>This module contains review questions and answers keyed to the module titled Jb0240: Java OOP: Arrays and Strings.</md:abstract>
  <md:uuid>361eb287-0891-4e78-9ecb-542943accb1e</md:uuid>
</metadata>

<content>






<para id="p1000">
Revised: Mon Mar 28 16:31:25 CDT 2016

</para>




<para id="p1001">
<emphasis id="em1000" effect="italics">
This page is included in the following Books:

</emphasis>
</para>




<list id="ul1000" list-type="bulleted">

	

<item id="li1000">

	

<link id="a1000" url="http://cnx.org/contents/EHRr6hjR:pDHzTeQb">


<emphasis id="em1001" effect="italics">
Programming Fundamentals with Java 
	

</emphasis>
 
	

</link>


</item>


	

<item id="li1001">
<link id="a1001" url="http://cnx.org/contents/-2RmHFs_:kFS-maG_">


<emphasis id="em1002" effect="italics">
Object-Oriented Programming (OOP) with Java 
	

</emphasis>
 
	

</link>

 

</item>




</list>













<section id="h11000">
<title>
Table of Contents

</title>




<list id="ul1001" list-type="bulleted">

	

<item id="li1002">
<link id="a1002" target-id="Preface">

Preface

</link>


</item>


	

<item id="li1003">
<link id="a1003" target-id="Questions">

Questions

</link>


	

<list id="ul1002" list-type="bulleted">

		

<item id="li1004">
<link id="a1004" target-id="question01">

1

</link>

, 

<link id="a1005" target-id="question02">

2

</link>

,
		

<link id="a1006" target-id="question03">

3

</link>

, 

<link id="a1007" target-id="question04">

4

</link>

,
		

<link id="a1008" target-id="question05">

5

</link>

, 

<link id="a1009" target-id="question06">

6

</link>

,
		

<link id="a1010" target-id="question07">

7

</link>

, 

<link id="a1011" target-id="question08">

8

</link>

,
		

<link id="a1012" target-id="question09">

9

</link>

, 

<link id="a1013" target-id="question10">

10

</link>

, 
		

<link id="a1014" target-id="question11">

11

</link>

, 

<link id="a1015" target-id="answer12">

12

</link>

, 
		

<link id="a1016" target-id="question13">

13

</link>

, 
		

<link id="a1017" target-id="question14">

14

</link>

, 
		

<link id="a1018" target-id="question15">

15

</link>

,
		

<link id="a1019" target-id="question16">

16

</link>

,
		

<link id="a1020" target-id="question17">

17

</link>

, 
		

<link id="a1021" target-id="question18">

18

</link>


</item>


	

</list>


	

</item>


	

<item id="li1005">
<link id="a1022" target-id="Listings">

Listings

</link>


</item>


	

<item id="li1006">
<link id="a1023" target-id="Answers">

Answers

</link>


</item>


	

<item id="li1007">
<link id="a1024" target-id="Miscellaneous">

Miscellaneous

</link>


</item>




</list>




</section>
<section id="h11001">
<title>
<emphasis id="Preface" effect="bold">

Preface

</emphasis>


</title>




<para id="p1002">
This module contains review questions and answers keyed to the module titled 


<link id="a1025" url="http://cnx.org/content/m45214">

Jb0240: Java OOP: Arrays and Strings

</link>

. 

</para>





<para id="p1003">
The questions and the answers are connected by hyperlinks to make it easy for 
you to navigate from the question to the answer and back again.

</para>





</section>
<section id="h11002">
<title>
<emphasis id="Questions" effect="bold">

Questions

</emphasis>


</title>





<section id="h21000">
<title>
<emphasis id="question01" effect="bold">

Question 1

</emphasis>


<emphasis id="strong1000" effect="bold">
. 

</emphasis>
 

</title>




<para id="p1004">
True or false? Arrays and Strings are true objects. If false, explain why. 

</para>





<para id="p1005">
<link id="a1026" target-id="answer01">

Answer 1

</link>

 

</para>






</section>
<section id="h21001">
<title>
<emphasis id="question02" effect="bold">

Question 2

</emphasis>


</title>




<para id="p1006">
True or false? It is easy to write outsides the bounds of a 

<emphasis id="strong1001" effect="bold">
String

</emphasis>
 
or an array. If false, explain why. 

</para>





<para id="p1007">
<link id="a1027" target-id="answer02">

Answer 2

</link>

 

</para>






</section>
<section id="h21002">
<title>
<emphasis id="question03" effect="bold">

Question 3

</emphasis>

 

</title>




<para id="p1008">
You must declare a variable capable of holding a reference to an array object 
before you can use it. In declaring the variable, you must provide two important 
pieces of information. What are they? 

</para>





<para id="p1009">
<link id="a1028" target-id="answer03">

Answer 3

</link>

 

</para>






</section>
<section id="h21003">
<title>
<emphasis id="question04" effect="bold">

Question 4

</emphasis>


</title>




<para id="p1010">
Provide code fragments that illustrate the two different syntaxes that can be 
used to declare a variable capable of holding a reference to an array object 
that will store data of type int. 

</para>





<para id="p1011">
<link id="a1029" target-id="answer04">

Answer 4

</link>

 

</para>






</section>
<section id="h21004">
<title>
<emphasis id="question05" effect="bold">

Question 5

</emphasis>


</title>




<para id="p1012">
True or false? When you declare a variable capable of holding a reference to 
an array object, the memory required to contain the array object is automatically 
allocated. If false, explain why and show how memory can be allocated. 

</para>





<para id="p1013">
<link id="a1030" target-id="answer05">

Answer 5

</link>


</para>






</section>
<section id="h21005">
<title>
<emphasis id="question06" effect="bold">

Question 6

</emphasis>


</title>




<para id="p1014">
True or false? It is required that you simultaneously declare the name of the 
variable and cause memory to be allocated to contain the array object in a single 
statement. If false, explain why and show code fragments to illustrate your 
answer. 

</para>





<para id="p1015">
<link id="a1031" target-id="answer06">

Answer 6

</link>

 

</para>






</section>
<section id="h21006">
<title>
<emphasis id="question07" effect="bold">

Question 7

</emphasis>


</title>




<para id="p1016">
True or false? Array indices always begin with 1. If false, explain why. 

</para>





<para id="p1017">
<link id="a1032" target-id="answer07">

Answer 7

</link>


</para>






</section>
<section id="h21007">
<title>
<emphasis id="question08" effect="bold">

Question 8

</emphasis>

 

</title>




<para id="p1018">
What is the name of the property of arrays that can be accessed to determine 
the number of elements in the array? Provide a sample code fragment that 
illustrates the use of this property. 

</para>





<para id="p1019">
<link id="a1033" target-id="answer08">

Answer 8

</link>

 

</para>






</section>
<section id="h21008">
<title>
<emphasis id="question09" effect="bold">

Question 9

</emphasis>


</title>




<para id="p1020">
What types of data can be stored in array objects? 

</para>





<para id="p1021">
<link id="a1034" target-id="answer09">

Answer 9

</link>

 

</para>






</section>
<section id="h21009">
<title>
<emphasis id="question10" effect="bold">

Question 10

</emphasis>


</title>




<para id="p1022">
True or false? Just as in other languages, when you create a 
multi-dimensional array, the secondary arrays must all be of the same size. If 
false, explain your answer. Then provide a code fragment that illustrates your 
answer or refer to a sample program in 

<link id="a1035" url="http://cnx.org/content/m45214">


Jb0240: Java OOP: Arrays and Strings

</link>

 that illustrates your answer.

</para>





<para id="p1023">
<link id="a1036" target-id="answer10">

Answer 10

</link>


</para>



	


</section>
<section id="h21010">
<title>
<emphasis id="question11" effect="bold">

Question 11

</emphasis>


</title>




<para id="p1024">
True or false? Just as in other languages, when declaring a two-dimensional 
array, it is necessary to declare the size of the secondary dimension when the 
array is declared. If false, explain your answer. Then provide a code fragment 
that illustrates your answer or refer to a sample program in


<link id="a1037" url="http://cnx.org/content/m45214">

Jb0240: Java OOP: Arrays and Strings

</link>

 
that illustrates your answer.

</para>





<para id="p1025">
<link id="a1038" target-id="answer11">

Answer 11

</link>


</para>



	


</section>
<section id="h21011">
<title>
<emphasis id="question12" effect="bold">

Question 12

</emphasis>


</title>




<para id="p1026">
True or false? Java allows you to assign one array to another. Explain what 
happens when you do this. Then provide a code fragment that illustrates your 
answer or refer to a sample program in 

<link id="a1039" url="http://cnx.org/content/m45214">


Jb0240: Java OOP: Arrays and Strings

</link>

 that illustrates your answer.

</para>





<para id="p1027">
<link id="a1040" target-id="answer12">

Answer 12

</link>


</para>



	


</section>
<section id="h21012">
<title>
<emphasis id="question13" effect="bold">

Question 13

</emphasis>


</title>




<para id="p1028">
Give a brief description of the concept of a string and list the names 
of two classes used to implement strings? 

</para>





<para id="p1029">
<link id="a1041" target-id="answer13">

Answer 13

</link>


</para>



	


</section>
<section id="h21013">
<title>
<emphasis id="question14" effect="bold">

Question 14

</emphasis>


</title>




<para id="p1030">
What is the syntax that is used to create a literal string? Provide a code 
fragment to illustrate your answer. 

</para>





<para id="p1031">
<link id="a1042" target-id="answer14">

Answer 14

</link>


</para>



	


</section>
<section id="h21014">
<title>
<emphasis id="question15" effect="bold">

Question 15

</emphasis>


</title>




<para id="p1032">
Explain the difference between objects of types 

<emphasis id="strong1002" effect="bold">
String

</emphasis>
 and


<emphasis id="strong1003" effect="bold">
StringBuffer

</emphasis>
. 

</para>





<para id="p1033">
<link id="a1043" target-id="answer15">

Answer 15

</link>


</para>



	


</section>
<section id="h21015">
<title>
<emphasis id="question16" effect="bold">

Question 16

</emphasis>


</title>




<para id="p1034">
Provide a code fragment that illustrates how to concatenate strings. 

</para>





<para id="p1035">
<link id="a1044" target-id="answer16">

Answer 16

</link>


</para>






</section>
<section id="h21016">
<title>
<emphasis id="question17" effect="bold">

Question 17

</emphasis>


</title>




<para id="p1036">
Provide a code fragment that declares and instantiates an array object 
capable of storing references to two 

<emphasis id="strong1004" effect="bold">
String

</emphasis>
 objects. Explain what happens when this code 
fragment is executed. Then show a code fragment that will allocate memory for 
the actual 

<emphasis id="strong1005" effect="bold">
String

</emphasis>
 objects. 

</para>





<para id="p1037">
<link id="a1045" target-id="answer17">

Answer 17

</link>


</para>






</section>
<section id="h21017">
<title>
<emphasis id="question18" effect="bold">

Question 18

</emphasis>


</title>




<para id="p1038">
Write a Java
application that illustrates the creation and manipulation 
of a two-dimensional array with the sub arrays being of 
different lengths.

Also cause your application to illustrate that an attempt
to access an array element out of bounds results in an 
exception being thrown.  Catch and process the exception.

Display a termination message with your name.

</para>





<para id="p1039">
<link id="a1046" target-id="answer18">

Answer 18

</link>


</para>













</section>
</section>
<section id="h11003">
<title>
<emphasis id="Listings" effect="bold">

Listings

</emphasis>


</title>




<list id="ul1003" list-type="bulleted">

	

<item id="li1008">
<link id="a1047" target-id="Listing_1">

Listing 1

</link>

. Listing for Answer 18.

</item>




</list>





<para id="p1040">
<emphasis id="strong1006" effect="bold">
What is the meaning of the following two images?

</emphasis>
</para>





<para id="p1041">
This image was inserted here simply to insert some space between the 
questions and the answers to keep them from being visible on the screen at the 
same time. 

</para>





<para id="p1042">
The image is also an example of the kinds of things that we do in my course 
titled ITSE 2321, Object-Oriented Programming.

</para>






<media id="media1000" alt="Missing image" display="block">
<image id="img1000" mime-type="image/jpeg" src="../../media/Spacer01.jpg" width="339" height="290"/>
</media>





<para id="p1043">
This image was also inserted for the purpose of inserting space between the questions and the answers.

</para>





<para id="p1044">



<media id="media1001" alt="Missing image" display="block">
<image id="img1001" mime-type="image/jpeg" src="../../media/Spacer02.jpg" width="374" height="308"/>
</media>


</para>








</section>
<section id="h11004">
<title>
<emphasis id="Answers" effect="bold">

Answers

</emphasis>


</title>





<section id="h21018">
<title>
<emphasis id="answer18" effect="bold">

Answer 18

</emphasis>


</title>



	

<table id="table1000" summary="A table." pgwide="0">
<tgroup cols="1">


		

<thead id="thead1000">

			

<row id="tr1000">

				

<entry id="th1000">
<emphasis id="Listing_1" effect="bold">

Listing 1

</emphasis>

. Listing for Answer 18.


</entry>

			

</row>

		

</thead>


		

<tbody id="tbody1000">

			

<row id="tr1001">

				

<entry id="td1000">



<code id="pre1000" display="block">
class SampProg10 { //define the controlling class
  public static void main(String[] args){ //define main 
    //Declare a two-dimensional array with a size of 3 on 
    // the primary dimension but with different sizes on 
    // the secondary dimension.
    //Secondary size not specified
    int[][] myArray = new int[3][];
    myArray[0] = new int[2];//secondary size is 2
    myArray[1] = new int[3];//secondary size is 3
    myArray[2] = new int[4];//secondary size is 4

    //Fill the array with data
    for(int i = 0; i &lt; 3; i++){
      for(int j = 0; j &lt; myArray[i].length; j++){
        myArray[i][j] = i * j;
      }//end inner loop
    }//end outer loop

    //Display data in the array
    for(int i = 0; i &lt; 3; i++){
      for(int j = 0; j &lt; myArray[i].length; j++){
        System.out.print(myArray[i][j]);
      }//end inner loop
      System.out.println();
    }//end outer loop

    //Attempt to access an out-of-bounds array element
    try{
      System.out.println(
                  "Attempt to access array out of bounds");
      myArray[4][0] = 7;
    }catch(ArrayIndexOutOfBoundsException e){
      System.out.println(e);
    }//end catch
   
    System.out.println("Terminating, Dick Baldwin");     

  }//end main
}//End SampProg10 class.  Note no semicolon required
</code>



				

</entry>

			

</row>

		

</tbody>


	

</tgroup>
</table>





<para id="p1045">
<link id="a1048" target-id="question18">

Back to Question 18

</link>

 

</para>






</section>
<section id="h21019">
<title>
<emphasis id="answer17" effect="bold">

Answer 17

</emphasis>


</title>




<para id="p1046">
The following statement declares and instantiates an array object capable of 
storing references to two 

<emphasis id="strong1007" effect="bold">
String

</emphasis>
 objects.

</para>







	

<note id="note1000" type="">


		


			


				


				

<code id="pre1001" display="block">
String[] myArrayOfStringReferences = new String[2];</code>


				

</note>

			


		



	



	

<para id="p1047">
Note however, that this array object doesn't contain the actual string 
	data. Rather, it simply sets aside memory for storage of two references to 
	

<emphasis id="strong1008" effect="bold">
String

</emphasis>
 objects. No memory has been set aside to store the characters that make up 
	the individual strings. You must allocate the memory for the actual 

<emphasis id="strong1009" effect="bold">

	String

</emphasis>
 objects separately using code similar to the following.

</para>







	

<note id="note1001" type="">


		


			


				


				

<code id="pre1002" display="block">
myArrayOfStringReferences[0] = new String(
                   "This is the first string.");
myArrayOfStringReferences[1] = new String(
                  "This is the second string.");</code>


				

</note>

			


		



	





<para id="p1048">
<link id="a1049" target-id="question17">

Back to Question 17

</link>

 

</para>






</section>
<section id="h21020">
<title>
<emphasis id="answer16" effect="bold">

Answer 16

</emphasis>


</title>




<para id="p1049">
Java supports string concatenation using the overloaded + operator as shown 
in the following code fragment: 

</para>







	

<note id="note1002" type="">


		


			


				


				

<code id="pre1003" display="block">
"My variable has a value of " + myVar + 
" at this point in the program."</code>


				

</note>

			


		



	





<para id="p1050">
<link id="a1050" target-id="question16">

Back to Question 16

</link>

 

</para>








</section>
<section id="h21021">
<title>
<emphasis id="answer15" effect="bold">

Answer 15

</emphasis>


</title>




<para id="p1051">
<emphasis id="strong1010" effect="bold">
String

</emphasis>
 objects cannot be modified once they have been 
created. 

<emphasis id="strong1011" effect="bold">
StringBuffer

</emphasis>
 objects can be modified 

</para>





<para id="p1052">
<link id="a1051" target-id="question15">

Back to Question 15

</link>

 

</para>







</section>
<section id="h21022">
<title>
<emphasis id="answer14" effect="bold">

Answer 14

</emphasis>


</title>




<para id="p1053">
The Java compiler considers a series of characters surrounded by quotation 
marks to be a literal string, as in the following code fragment: 

</para>







	

<note id="note1003" type="">


		


			


				


				

<code id="pre1004" display="block">
"This is a literal string in Java."</code>


				

</note>

			


		



	





<para id="p1054">
<link id="a1052" target-id="question14">

Back to Question 14

</link>

 

</para>







</section>
<section id="h21023">
<title>
<emphasis id="answer13" effect="bold">

Answer 13

</emphasis>


</title>




<para id="p1055">
A string is commonly considered to be a sequence of characters stored in 
memory and accessible as a unit. Java implements strings using the 

<emphasis id="strong1012" effect="bold">

String

</emphasis>
 class and the 

<emphasis id="strong1013" effect="bold">
StringBuffer

</emphasis>
 class. 

</para>





<para id="p1056">
<link id="a1053" target-id="question13">

Back to Question 13

</link>

 

</para>







</section>
<section id="h21024">
<title>
<emphasis id="answer12" effect="bold">

Answer 12

</emphasis>


</title>




<para id="p1057">
Java allows you to assign one array to another. When you do this, you are 
simply making another copy of the reference to the same data in memory. Then you 
have two references to the same data in memory. This is illustrated in the 
program named 

<emphasis id="strong1014" effect="bold">
array02.java

</emphasis>
 in


<link id="a1054" url="http://cnx.org/content/m45214">

Jb0240: Java OOP: Arrays and Strings

</link>

.

</para>





<para id="p1058">
<link id="a1055" target-id="question12">

Back to Question 12

</link>

 

</para>






</section>
<section id="h21025">
<title>
<emphasis id="answer11" effect="bold">

Answer 11

</emphasis>


</title>




<para id="p1059">
False. When declaring a two-dimensional array, it is not necessary to declare 
the size of the secondary dimension when the array is declared. Declaration of 
the size of each sub-array can be deferred until later as illustrated in the 
program named 

<emphasis id="strong1015" effect="bold">
array01.java

</emphasis>
 in


<link id="a1056" url="http://cnx.org/content/m45214">

Jb0240: Java OOP: Arrays and Strings

</link>

.

</para>





<para id="p1060">
<link id="a1057" target-id="question11">

Back to Question 11

</link>

 

</para>







</section>
<section id="h21026">
<title>
<emphasis id="answer10" effect="bold">

Answer 10

</emphasis>


</title>




<para id="p1061">
False. Java can be used to produce multi-dimensional arrays that can be 
viewed as an array of arrays. However, the secondary arrays need not all be of 
the same size. See the program named 

<emphasis id="strong1016" effect="bold">
array01.java

</emphasis>
 in


<link id="a1058" url="http://cnx.org/content/m45214">

Jb0240: Java OOP: Arrays and Strings

</link>

.

</para>





<para id="p1062">
<link id="a1059" target-id="question10">

Back to Question 10

</link>

 

</para>








</section>
<section id="h21027">
<title>
<emphasis id="answer09" effect="bold">

Answer 9

</emphasis>

 

</title>




<para id="p1063">
Array objects can contain any Java data type including primitive values, references 
to ordinary objects, and references to other array objects.

</para>





<para id="p1064">
<link id="a1060" target-id="question09">

Back to Question 9

</link>

 

</para>





</section>
<section id="h21028">
<title>
<emphasis id="answer08" effect="bold">

Answer 8

</emphasis>

 

</title>




<para id="p1065">
All array objects have a 

<emphasis id="strong1017" effect="bold">
length

</emphasis>
 property that can be accessed to determine 
the number of elements in the array as shown below.

</para>







	

<note id="note1004" type="">


		


			


				


				

<code id="pre1005" display="block">
for(int cnt = 0; cnt &lt; myArray.length; cnt++) 
  myArray[cnt] = cnt;</code>


				

</note>

			


		



	





<para id="p1066">
<link id="a1061" target-id="question08">

Back to Question 8

</link>

 

</para>





</section>
<section id="h21029">
<title>
<emphasis id="answer07" effect="bold">

Answer 7

</emphasis>

 

</title>




<para id="p1067">
False. Array indices always begin with 0. 

</para>





<para id="p1068">
<link id="a1062" target-id="question07">

Back to Question 7

</link>

 

</para>






</section>
<section id="h21030">
<title>
<emphasis id="answer06" effect="bold">

Answer 6

</emphasis>


</title>




<para id="p1069">
False. While it is possible to simultaneously declare the name of the 
variable 
and cause memory to be allocated to contain the array object, it is not necessary to 
combine these two processes. You can execute one statement to declare the 
variable 
and another statement to cause the memory for the array object to be allocated as shown below.

</para>







	

<note id="note1005" type="">


		


			


				


				

<code id="pre1006" display="block">
int[] myArray;
.
.
.
myArray = new int[25];</code>


				

</note>

			


		



	





<para id="p1070">
<link id="a1063" target-id="question06">

Back to Question 6

</link>

 

</para>







</section>
<section id="h21031">
<title>
<emphasis id="answer05" effect="bold">

Answer 5

</emphasis>


</title>




<para id="p1071">
False. As with other objects. the declaration of the variable does not 
allocate memory to contain the array object. Rather it simply allocates memory to 
contain a reference to the array object. Memory to contain the array object must 
be allocated from dynamic memory using statements such as the following.

</para>







	

<note id="note1006" type="">


		


			


				


				

<code id="pre1007" display="block">
int[] myArray = new int[15];
int myArray[] = new int[25];
int[] myArray = {1,2,3,4,5}</code>


				

</note>

			


		



	





<para id="p1072">
<link id="a1064" target-id="question05">

Back to Question 5

</link>

 

</para>





</section>
<section id="h21032">
<title>
<emphasis id="answer04" effect="bold">

Answer 4

</emphasis>

 

</title>






	

<note id="note1007" type="">


		


			


				


				

<code id="pre1008" display="block">
int[] myArray;
int myArray[];</code>


				

</note>

			


		



	





<para id="p1073">
<link id="a1065" target-id="question04">

Back to Question 4

</link>

 

</para>





</section>
<section id="h21033">
<title>
<emphasis id="answer03" effect="bold">

Answer 3

</emphasis>

 

</title>




<para id="p1074">
In declaring the variable, you must provide two important pieces of 
information:

</para>





<list id="ul1004" list-type="bulleted">

	

<item id="li1009">
the name of the variable 

</item>


	

<item id="li1010">
the type of the variable, which indicates the type of data to be stored in the array

</item>




</list>




<para id="p1075">
<link id="a1066" target-id="question03">

Back to Question 3

</link>

 

</para>





</section>
<section id="h21034">
<title>
<emphasis id="answer02" effect="bold">

Answer 2

</emphasis>


</title>




<para id="p1076">
False. Java has a true array type and a true 

<emphasis id="strong1018" effect="bold">
String

</emphasis>
 type 
with protective features to prevent your program from writing outside the memory 
bounds of the array or the 

<emphasis id="strong1019" effect="bold">
String

</emphasis>
. 

</para>





<para id="p1077">
<link id="a1067" target-id="question02">

Back to Question 2

</link>

 

</para>







</section>
<section id="h21035">
<title>
<emphasis id="answer01" effect="bold">

Answer 1

</emphasis>

 

</title>




<para id="p1078">
True.

</para>





<para id="p1079">
<link id="a1068" target-id="question01">

Back to Question 1

</link>

 

</para>






</section>
</section>
<section id="h11005">
<title>
<emphasis id="Miscellaneous" effect="bold">

Miscellaneous

</emphasis>


</title>




<para id="p1080">
This section contains a variety of miscellaneous information. 

</para>





	

<note id="note1008" type="">


		


			

<emphasis id="strong1020" effect="bold">
Housekeeping material

</emphasis>

			

<list id="ul1005" list-type="bulleted">

				

<item id="li1011">
Module name: Jb0240r Review: Arrays and Strings

</item>


				

<item id="li1012">
File: Jb0240r.htm 

</item>


				

<item id="li1013">
Originally published: 1997

</item>


				

<item id="li1014">
Published at cnx.org: 11/26/12

</item>


			

</list>


			

</note>

		








	

<note id="note1009" type="">


		


			

<emphasis id="strong1021" effect="bold">
Disclaimers:

</emphasis>
<para id="p1081">
<emphasis id="strong1022" effect="bold">
Financial

</emphasis>
: 
			Although the Connexions site makes it possible for you to download a 
			PDF file for this module at no charge, and also makes it possible 
			for you to purchase a pre-printed version of the PDF file, you 
			should be aware that some of the HTML elements in this module may 
			not translate well into PDF.

</para>



			

<para id="p1082">
I also want you to know that, I receive no financial compensation 
			from the Connexions website even if you purchase the PDF version of 
			the module.

</para>



			

<para id="p1083">
In the past, unknown individuals have copied my modules from 
			cnx.org, converted them to Kindle books, and placed them for sale on 
			Amazon.com showing me as the author. I neither receive compensation 
			for those sales nor do I know who does receive compensation. If you 
			purchase such a book, please be aware that it is a copy of a module 
			that is freely available on cnx.org and that it was made and 
			published without my prior knowledge.

</para>



			

<para id="p1084">
<emphasis id="strong1023" effect="bold">
Affiliation

</emphasis>
: I am a professor of Computer 
			Information Technology at Austin Community College in Austin, TX.
			

</para>



			

</note>

		







	

<para id="p1085">
-end- 

</para>







</section>
</content>




</document>